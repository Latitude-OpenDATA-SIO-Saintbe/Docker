name: Deploy to AWS

on:
  push:
    branches:
      - main  # Trigger on pushes to main branch
  pull_request:
    branches:
      - main  # Optionally trigger on PRs to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up AWS credentials
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Specify your AWS region

      # Step 3: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 4: Build and push Docker images to ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build Docker images
        run: |
          docker-compose -f docker-compose.yml build

      - name: Tag Docker images
        run: |
          docker tag climate-change-sio:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/latitude-opendata-sio-saintbe/docker:latest

      - name: Push Docker images to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/latitude-opendata-sio-saintbe/docker:latest

      # Step 5: Deploy Docker Compose to ECS (use ECS CLI or AWS CLI)
      - name: Deploy to AWS ECS
        run: |
          ecs-cli configure --region ${{ secrets.AWS_REGION }} --access-key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret-key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --cluster latitude
          ecs-cli compose --file docker-compose.yml up
